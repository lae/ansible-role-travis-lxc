language: python
sudo: required
dist: trusty
cache:
  directories: [ '$HOME/lxc' ]
  pip: true
matrix:
  fast_finish: true
env:
  - LXC_DISTRO=debian LXC_RELEASE=stretch
  - LXC_DISTRO=debian LXC_RELEASE=jessie
  - LXC_DISTRO=debian LXC_RELEASE=wheezy
  - LXC_DISTRO=ubuntu LXC_RELEASE=xenial
  - LXC_DISTRO=ubuntu LXC_RELEASE=trusty
  - LXC_DISTRO=ubuntu LXC_RELEASE=precise
  - LXC_DISTRO=centos LXC_RELEASE=7
  - LXC_DISTRO=centos LXC_RELEASE=6
  - LXC_DISTRO=ubuntu LXC_RELEASE=xenial ANSIBLE_VERSION='ansible>=2.2.0,<2.3.0' #2.2.x
  - LXC_DISTRO=ubuntu LXC_RELEASE=xenial ANSIBLE_VERSION='ansible>=2.3.0,<2.4.0' #2.3.x
  - LXC_DISTRO=ubuntu LXC_RELEASE=xenial ANSIBLE_VERSION='ansible>=2.4.0,<2.5.0' #2.4.x
  - LXC_DISTRO=ubuntu LXC_RELEASE=xenial ANSIBLE_VERSION='git+https://github.com/ansible/ansible.git@devel' #2.5 DEVEL

before_cache:
- sudo mkdir $HOME/lxc && sudo tar cf $HOME/lxc/cache.tar /var/cache/lxc/ && sudo chown $USER. $HOME/lxc/cache.tar
install:
- sudo tar xf $HOME/lxc/cache.tar -C / || true
- sudo apt-get install -y expect-dev
- if [ "$ANSIBLE_VERSION" ]; then pip install $ANSIBLE_VERSION; else pip install ansible; fi
- ansible --version
- printf '[defaults]\nroles_path=../\ncallback_whitelist=profile_tasks' >ansible.cfg
script:
- ansible-playbook -i test01.lxc, tests/deploy.yml --syntax-check
- ANSIBLE_STDOUT_CALLBACK=debug ansible-playbook -i test01.lxc, -vvv tests/deploy.yml
- unbuffer ansible-playbook -i test01.lxc, tests/deploy.yml >/tmp/idempotency.log 2>&1
- 'grep -A1 "PLAY RECAP" /tmp/idempotency.log | grep -qP "changed=0.*failed=0" &&
  (echo "Idempotence: PASS"; exit 0) || (echo "Idempotence: FAIL"; cat /tmp/idempotency.log;
  exit 1)'
- ANSIBLE_STDOUT_CALLBACK=debug ansible-playbook -i test01.lxc, -vvv tests/test.yml
notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  slack:
    secure: MsxUgDXsiTpTGbWCBSXWdjMqPGGoxrpSr0isQp1lUhpb2VCSMAbpBtN7sf7NjyewFIj/4OudDJ0+F6gWN5YVCOW6PvojQ7pNPENH/yCdsfH2nwhIshJ12VPs4tWbRA/C0FSLzijb1961tSrqxPE7afa4KKBJNY4Xfud0RiWlRXllUcbC2zCVBc6BXAdolJ6qT20Fpupa9gD94tq73mCb2h8C6GVhnb7dh7125q7I7bXVd+lCyDp21qoEz/mTgIGE21MIzCQZhQEkOjewhdDWVk0WVfq5Qhzd3A0anb60vL6U+b9OUXwKP15kFIH6wMA3Xs5X+jwZbPVTKHnYQ15W/FFNUZAQGnoCFOtYDGVowB5RsApeRElIj4EM3PTJ3zNTjUcHaFbVWux1v+IlVtmLvskCWXdxUX2NAR12hy6Mv76WE8SclW4lWFxws8hske0CSJLizMnTfUJfRK9wy5W0FjmoDm51MS1sNjEGlUVnC8Zpb6eyKchz0XYeq5ZFXk2SR6e9NdpzZ16I5Cmc929WP/Ux8/NwSuQixDOFiDkm4nzJ1TvNAK7N0Y24DsfhFLwIfjq200bEqUZE51keMUR2j9pD7E5cS1RX/DYXsV2mttfoFpmvKvlk/NSwZZq3yH9lgpM+IREM4asXFDBsmURd9Sj/CfPkC5wwzkDEuap8ySc=
